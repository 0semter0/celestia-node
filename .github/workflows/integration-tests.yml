name: Integration Tests

on:
  workflow_call:
    inputs:
      go-version:
        description: 'Go version'
        required: true
        type: string

jobs:
  api_tests:
    name: Integration Tests API
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: set up go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ inputs.go-version }}

      - name: run API tests
        run: make test-integration-coverage TAGS=api

      - name: upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./api-coverage.out

  blob_tests:
    name: Integration Tests Blob
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: set up go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ inputs.go-version }}

      - name: run blob tests
        run: make test-integration-coverage TAGS=blob

      - name: upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./blob-coverage.out

  da_tests:
    name: Da Tests Sync
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: set up go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ inputs.go-version }}

      - name: run da tests
        run: make test-integration SHORT=true TAGS=da

      - name: upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./da-coverage.out

  fraud_tests:
    name: Integration Tests Fraud
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: set up go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ inputs.go-version }}

      - name: run fraud tests
        run: make test-integration-coverage TAGS=fraud

      - name: upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./fraud-coverage.out

  nd_tests:
    name: Integration Tests ND
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: set up go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ inputs.go-version }}

      - name: run nd tests
        run: make test-integration-coverage TAGS=nd

      - name: upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./nd-coverage.out

  p2p_tests:
    name: Integration Tests p2p
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: set up go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ inputs.go-version }}

      - name: run p2p tests
        run: make test-integration-coverage TAGS=p2p

      - name: upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./p2p-coverage.out

  reconstruction_tests:
    name: Integration Tests Reconstruction
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: set up go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ inputs.go-version }}

      - name: run reconstruction tests
        run: make test-integration-coverage SHORT=true TAGS=reconstruction

      - name: upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./reconstruction-coverage.out

  sync_tests:
    name: Integration Tests Sync
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: set up go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ inputs.go-version }}

      - name: run sync tests
        run: make test-integration-coverage SHORT=true TAGS=sync

      - name: upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./sync-coverage.out
